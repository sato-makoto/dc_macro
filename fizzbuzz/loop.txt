# fizzbuzz script file
# from 1 to $NUM
# echo $num | dc -f loop.txt

# divisor, compare flag
# flag of a fizzbuzz match or not
0 s0
1 s1
3 s3
5 s5
15 sz
# q register is divident

# macros to print fizzbuzz
[lq lz % st lt l0 =u] se
[lq l5 % st lt l0 =k] sb
[lq l3 % st lt l0 =i] sf

# macro to print number
# if 0 register is zero
# print q register 
[l0 0 =p] sc
[lq p ] sp

# if fizzbuzz|fizz|buzz
# 0 register is -1
[[fizzbuzz] p _1 s0] su
[[buzz] p _1 s0] sk
[[fizz] p _1 s0] si

# loop macro
# name of registers below are very dirty

[0 s0] so
[lex lbx lfx lcx lox l9x] s6
0 s7
# get number from standard input
# [enter a number] p
? 1 + s8
[l7 1 + sq  lq  s7  c l7 l8  !=6 ] s9

# expressions
l9x
